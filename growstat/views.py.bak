from pyramid.view import view_config
from pyramid.session import UnencryptedCookieSessionFactoryConfig
from pyramid.httpexceptions import HTTPFound

@view_config(route_name='home', renderer='home.mako')
def home_view(request):
    return {'totalharvest': 0, 'totalgrowth': 0, 'totalliveplants': 0, 'averageph': 7, 'averageec': 3, 'averagetemp': 23, 'averagehum': 50}

@view_config(route_name='addsupply', renderer='addsupply.mako')
def addsupply_view(request):
    if not request.method =='POST':
        pass
    elif not request.POST['name']:
        request.session.flash('You have to fill out a name!')
    else:
        request.db.execute('insert into supplies (name) values ( ? )',[request.POST['name']])
        request.db.commit()
        request.session.flash('Water supply added successfully!')
        return HTTPFound(location=request.route_url('list'))
    return {}

@view_config(route_name='ph', renderer='ph.mako')
def ph_view(request):
    if not request.method == 'POST':
        pass
    elif not request.POST['ph'] or not request.POST['supply']:
        request.session.flash('Both ph and water supply have to be filled out!')
    elif not isinstance(request.POST['ph'],float):
        request.session.flash('PH must be numerical!')
    elif not isinstance(request.POST['supply'],int):
        request.session.flash('This is not a valid water supply!')
    else :
        #now check if the supply exists
        supply=request.POST['supply']
        ph=request.POST['ph']
        request.db.execute('select count(*) from supplies where id = ?', [supply])
        count=request.db.fetchone()[0]
        if count !=1 :
            request.session.flash('This is not a valid water supply!')
        else:
            request.db.execute('insert into ph (ph, supply) values (?, ?)', [ph, supply])
            request.db.commit()
            request.session.flash('New task successfully added!')
            return HTTPFound(location=request.route_url('home'))
    cursor=request.db.cursor()
    cursor.execute('select * from supplies where id != ?', [0])
    #    request.db.execute('select * from supplies where id != 0')
    #    supplies=request.db.fetchall()
    supplies=cursor.fetchall()
    #    request.session.flash('Flash still works!')
    return {'supplies' : supplies}

@view_config(route_name='list',renderer='list.mako')
def list_view(request):
    cursor=request.db.cursor()
    cursor.execute('select * from supplies where id != 0')
    supplies=cursor.fetchall()
    cursor.execute('select * from columns where id != 0')
    columns=cursor.fetchall()
    cursor.execute('select * from slots where id!=0')
    slots=cursor.fetchall()
    cursor.execute('select * from plants where slot!=0')
    plants=cursor.fetchall()
    return {'supplies': supplies, 'columns': columns, 'slots': slots, 'plants': plants}

@view_config(context='pyramid.exceptions.NotFound', renderer='notfound.mako')
def notfound_view(request):
    request.response.status = '404 Not Found'
    return {}
